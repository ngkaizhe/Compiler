Terminals unused in grammar

    IF
    ELSE
    FOR
    PRINT
    PRINTLN
    TO
    WHILE
    AND
    OR
    NOT
    LT
    LE
    EQ
    NQ
    GE
    GT


State 17 conflicts: 2 reduce/reduce
State 20 conflicts: 1 shift/reduce
State 27 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 $@1: %empty

    2 $@2: %empty

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 OBJCONTENT '}'

    4 OBJCONTENT: STMTS FUNCTION_DEFINITIONS

    5 FUNCTION_DEFINITIONS: FUNCTION_DEFINITION FUNCTION_DEFINITIONS
    6                     | FUNCTION_DEFINITION

    7 $@3: %empty

    8 $@4: %empty

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' ':' VALUE_TYPE
   11                     | '(' FORMAL_ARGS ')'

   12 FORMAL_ARGS: ARG ',' FORMAL_ARGS
   13            | ARG

   14 ARG: ID_NAME ':' VALUE_TYPE

   15 RETURN_STMT: RETURN EXP

   16 STMTS: STMT
   17      | STMT STMTS
   18      | %empty

   19 STMT: ID_NAME '=' EXP
   20     | EXP
   21     | VALDECLARATION
   22     | VARDECLARATION
   23     | RETURN_STMT

   24 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   25               | VAL ID_NAME '=' VALUE_TOKEN

   26 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE
   27               | VAR ID_NAME '=' VALUE_TOKEN
   28               | VAR ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   29               | VAR ID_NAME
   30               | VAR ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN ']'

   31 EXP: ID_NAME
   32    | EXP '+' EXP
   33    | EXP '-' EXP
   34    | EXP '*' EXP
   35    | EXP '/' EXP
   36    | '-' EXP
   37    | VALUE_TOKEN
   38    | FUNCTION_CALLED

   39 $@5: %empty

   40 FUNCTION_CALLED: ID_NAME $@5 '(' FUNCTION_CALLED_ARGS ')'

   41 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG ',' FUNCTION_CALLED_ARGS
   42                     | FUNCTION_CALLED_ARG

   43 FUNCTION_CALLED_ARG: VALUE_TOKEN


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 11 40
    ')' (41) 10 11 40
    '*' (42) 34
    '+' (43) 32
    ',' (44) 12 41
    '-' (45) 33 36
    '/' (47) 35
    ':' (58) 10 14 24 26 28 30
    '=' (61) 19 24 25 27 28
    '[' (91) 30
    ']' (93) 30
    '{' (123) 3 9
    '}' (125) 3 9
    error (256)
    ID_NAME <idName> (258) 3 9 14 19 24 25 26 27 28 29 30 31 40
    VALUE_TOKEN <value> (259) 24 25 27 28 30 37 43
    VALUE_TYPE <valueType> (260) 10 14 24 26 28 30
    VAR (261) 26 27 28 29 30
    VAL (262) 24 25
    DEF (263) 9
    IF (264)
    ELSE (265)
    FOR (266)
    PRINT (267)
    PRINTLN (268)
    RETURN (269) 15
    TO (270)
    WHILE (271)
    OBJECT (272) 3
    AND (273)
    OR (274)
    NOT (275)
    LT (276)
    LE (277)
    EQ (278)
    NQ (279)
    GE (280)
    GT (281)
    UMINUS (282)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    PROGRAM (42)
        on left: 3
        on right: 0
    $@1 (43)
        on left: 1
        on right: 3
    $@2 (44)
        on left: 2
        on right: 3
    OBJCONTENT (45)
        on left: 4
        on right: 3
    FUNCTION_DEFINITIONS (46)
        on left: 5 6
        on right: 4 5
    FUNCTION_DEFINITION (47)
        on left: 9
        on right: 5 6
    $@3 (48)
        on left: 7
        on right: 9
    $@4 (49)
        on left: 8
        on right: 9
    FUNCTION_DEFINITION2 (50)
        on left: 10 11
        on right: 9
    FORMAL_ARGS (51)
        on left: 12 13
        on right: 10 11 12
    ARG (52)
        on left: 14
        on right: 12 13
    RETURN_STMT (53)
        on left: 15
        on right: 23
    STMTS (54)
        on left: 16 17 18
        on right: 4 9 17
    STMT (55)
        on left: 19 20 21 22 23
        on right: 16 17
    VALDECLARATION (56)
        on left: 24 25
        on right: 21
    VARDECLARATION (57)
        on left: 26 27 28 29 30
        on right: 22
    EXP <value> (58)
        on left: 31 32 33 34 35 36 37 38
        on right: 15 19 20 32 33 34 35 36
    FUNCTION_CALLED <value> (59)
        on left: 40
        on right: 38
    $@5 (60)
        on left: 39
        on right: 40
    FUNCTION_CALLED_ARGS (61)
        on left: 41 42
        on right: 40 41
    FUNCTION_CALLED_ARG (62)
        on left: 43
        on right: 41 42


State 0

    0 $accept: . PROGRAM $end

    OBJECT  shift, and go to state 1

    PROGRAM  go to state 2


State 1

    3 PROGRAM: OBJECT . ID_NAME $@1 '{' $@2 OBJCONTENT '}'

    ID_NAME  shift, and go to state 3


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


State 3

    3 PROGRAM: OBJECT ID_NAME . $@1 '{' $@2 OBJCONTENT '}'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: PROGRAM $end .

    $default  accept


State 5

    3 PROGRAM: OBJECT ID_NAME $@1 . '{' $@2 OBJCONTENT '}'

    '{'  shift, and go to state 6


State 6

    3 PROGRAM: OBJECT ID_NAME $@1 '{' . $@2 OBJCONTENT '}'

    $default  reduce using rule 2 ($@2)

    $@2  go to state 7


State 7

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 . OBJCONTENT '}'

    ID_NAME      shift, and go to state 8
    VALUE_TOKEN  shift, and go to state 9
    VAR          shift, and go to state 10
    VAL          shift, and go to state 11
    RETURN       shift, and go to state 12
    '-'          shift, and go to state 13

    $default  reduce using rule 18 (STMTS)

    OBJCONTENT       go to state 14
    RETURN_STMT      go to state 15
    STMTS            go to state 16
    STMT             go to state 17
    VALDECLARATION   go to state 18
    VARDECLARATION   go to state 19
    EXP              go to state 20
    FUNCTION_CALLED  go to state 21


State 8

   19 STMT: ID_NAME . '=' EXP
   31 EXP: ID_NAME .
   40 FUNCTION_CALLED: ID_NAME . $@5 '(' FUNCTION_CALLED_ARGS ')'

    '='  shift, and go to state 22

    '('       reduce using rule 39 ($@5)
    $default  reduce using rule 31 (EXP)

    $@5  go to state 23


State 9

   37 EXP: VALUE_TOKEN .

    $default  reduce using rule 37 (EXP)


State 10

   26 VARDECLARATION: VAR . ID_NAME ':' VALUE_TYPE
   27               | VAR . ID_NAME '=' VALUE_TOKEN
   28               | VAR . ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   29               | VAR . ID_NAME
   30               | VAR . ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN ']'

    ID_NAME  shift, and go to state 24


State 11

   24 VALDECLARATION: VAL . ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   25               | VAL . ID_NAME '=' VALUE_TOKEN

    ID_NAME  shift, and go to state 25


State 12

   15 RETURN_STMT: RETURN . EXP

    ID_NAME      shift, and go to state 26
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 13

    EXP              go to state 27
    FUNCTION_CALLED  go to state 21


State 13

   36 EXP: '-' . EXP

    ID_NAME      shift, and go to state 26
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 13

    EXP              go to state 28
    FUNCTION_CALLED  go to state 21


State 14

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 OBJCONTENT . '}'

    '}'  shift, and go to state 29


State 15

   23 STMT: RETURN_STMT .

    $default  reduce using rule 23 (STMT)


State 16

    4 OBJCONTENT: STMTS . FUNCTION_DEFINITIONS

    DEF  shift, and go to state 30

    FUNCTION_DEFINITIONS  go to state 31
    FUNCTION_DEFINITION   go to state 32


State 17

   16 STMTS: STMT .
   17      | STMT . STMTS

    ID_NAME      shift, and go to state 8
    VALUE_TOKEN  shift, and go to state 9
    VAR          shift, and go to state 10
    VAL          shift, and go to state 11
    RETURN       shift, and go to state 12
    '-'          shift, and go to state 13

    DEF       reduce using rule 16 (STMTS)
    DEF       [reduce using rule 18 (STMTS)]
    '}'       reduce using rule 16 (STMTS)
    '}'       [reduce using rule 18 (STMTS)]
    $default  reduce using rule 16 (STMTS)

    RETURN_STMT      go to state 15
    STMTS            go to state 33
    STMT             go to state 17
    VALDECLARATION   go to state 18
    VARDECLARATION   go to state 19
    EXP              go to state 20
    FUNCTION_CALLED  go to state 21


State 18

   21 STMT: VALDECLARATION .

    $default  reduce using rule 21 (STMT)


State 19

   22 STMT: VARDECLARATION .

    $default  reduce using rule 22 (STMT)


State 20

   20 STMT: EXP .
   32 EXP: EXP . '+' EXP
   33    | EXP . '-' EXP
   34    | EXP . '*' EXP
   35    | EXP . '/' EXP

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    '-'       [reduce using rule 20 (STMT)]
    $default  reduce using rule 20 (STMT)


State 21

   38 EXP: FUNCTION_CALLED .

    $default  reduce using rule 38 (EXP)


State 22

   19 STMT: ID_NAME '=' . EXP

    ID_NAME      shift, and go to state 26
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 13

    EXP              go to state 38
    FUNCTION_CALLED  go to state 21


State 23

   40 FUNCTION_CALLED: ID_NAME $@5 . '(' FUNCTION_CALLED_ARGS ')'

    '('  shift, and go to state 39


State 24

   26 VARDECLARATION: VAR ID_NAME . ':' VALUE_TYPE
   27               | VAR ID_NAME . '=' VALUE_TOKEN
   28               | VAR ID_NAME . ':' VALUE_TYPE '=' VALUE_TOKEN
   29               | VAR ID_NAME .
   30               | VAR ID_NAME . ':' VALUE_TYPE '[' VALUE_TOKEN ']'

    '='  shift, and go to state 40
    ':'  shift, and go to state 41

    $default  reduce using rule 29 (VARDECLARATION)


State 25

   24 VALDECLARATION: VAL ID_NAME . ':' VALUE_TYPE '=' VALUE_TOKEN
   25               | VAL ID_NAME . '=' VALUE_TOKEN

    '='  shift, and go to state 42
    ':'  shift, and go to state 43


State 26

   31 EXP: ID_NAME .
   40 FUNCTION_CALLED: ID_NAME . $@5 '(' FUNCTION_CALLED_ARGS ')'

    '('       reduce using rule 39 ($@5)
    $default  reduce using rule 31 (EXP)

    $@5  go to state 23


State 27

   15 RETURN_STMT: RETURN EXP .
   32 EXP: EXP . '+' EXP
   33    | EXP . '-' EXP
   34    | EXP . '*' EXP
   35    | EXP . '/' EXP

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    '-'       [reduce using rule 15 (RETURN_STMT)]
    $default  reduce using rule 15 (RETURN_STMT)


State 28

   32 EXP: EXP . '+' EXP
   33    | EXP . '-' EXP
   34    | EXP . '*' EXP
   35    | EXP . '/' EXP
   36    | '-' EXP .

    $default  reduce using rule 36 (EXP)


State 29

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 OBJCONTENT '}' .

    $default  reduce using rule 3 (PROGRAM)


State 30

    9 FUNCTION_DEFINITION: DEF . ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

    ID_NAME  shift, and go to state 44


State 31

    4 OBJCONTENT: STMTS FUNCTION_DEFINITIONS .

    $default  reduce using rule 4 (OBJCONTENT)


State 32

    5 FUNCTION_DEFINITIONS: FUNCTION_DEFINITION . FUNCTION_DEFINITIONS
    6                     | FUNCTION_DEFINITION .

    DEF  shift, and go to state 30

    $default  reduce using rule 6 (FUNCTION_DEFINITIONS)

    FUNCTION_DEFINITIONS  go to state 45
    FUNCTION_DEFINITION   go to state 32


State 33

   17 STMTS: STMT STMTS .

    $default  reduce using rule 17 (STMTS)


State 34

   33 EXP: EXP '-' . EXP

    ID_NAME      shift, and go to state 26
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 13

    EXP              go to state 46
    FUNCTION_CALLED  go to state 21


State 35

   32 EXP: EXP '+' . EXP

    ID_NAME      shift, and go to state 26
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 13

    EXP              go to state 47
    FUNCTION_CALLED  go to state 21


State 36

   34 EXP: EXP '*' . EXP

    ID_NAME      shift, and go to state 26
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 13

    EXP              go to state 48
    FUNCTION_CALLED  go to state 21


State 37

   35 EXP: EXP '/' . EXP

    ID_NAME      shift, and go to state 26
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 13

    EXP              go to state 49
    FUNCTION_CALLED  go to state 21


State 38

   19 STMT: ID_NAME '=' EXP .
   32 EXP: EXP . '+' EXP
   33    | EXP . '-' EXP
   34    | EXP . '*' EXP
   35    | EXP . '/' EXP

    '-'  shift, and go to state 34
    '+'  shift, and go to state 35
    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 19 (STMT)


State 39

   40 FUNCTION_CALLED: ID_NAME $@5 '(' . FUNCTION_CALLED_ARGS ')'

    VALUE_TOKEN  shift, and go to state 50

    FUNCTION_CALLED_ARGS  go to state 51
    FUNCTION_CALLED_ARG   go to state 52


State 40

   27 VARDECLARATION: VAR ID_NAME '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 53


State 41

   26 VARDECLARATION: VAR ID_NAME ':' . VALUE_TYPE
   28               | VAR ID_NAME ':' . VALUE_TYPE '=' VALUE_TOKEN
   30               | VAR ID_NAME ':' . VALUE_TYPE '[' VALUE_TOKEN ']'

    VALUE_TYPE  shift, and go to state 54


State 42

   25 VALDECLARATION: VAL ID_NAME '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 55


State 43

   24 VALDECLARATION: VAL ID_NAME ':' . VALUE_TYPE '=' VALUE_TOKEN

    VALUE_TYPE  shift, and go to state 56


State 44

    9 FUNCTION_DEFINITION: DEF ID_NAME . $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

    $default  reduce using rule 7 ($@3)

    $@3  go to state 57


State 45

    5 FUNCTION_DEFINITIONS: FUNCTION_DEFINITION FUNCTION_DEFINITIONS .

    $default  reduce using rule 5 (FUNCTION_DEFINITIONS)


State 46

   32 EXP: EXP . '+' EXP
   33    | EXP . '-' EXP
   33    | EXP '-' EXP .
   34    | EXP . '*' EXP
   35    | EXP . '/' EXP

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 33 (EXP)


State 47

   32 EXP: EXP . '+' EXP
   32    | EXP '+' EXP .
   33    | EXP . '-' EXP
   34    | EXP . '*' EXP
   35    | EXP . '/' EXP

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 32 (EXP)


State 48

   32 EXP: EXP . '+' EXP
   33    | EXP . '-' EXP
   34    | EXP . '*' EXP
   34    | EXP '*' EXP .
   35    | EXP . '/' EXP

    $default  reduce using rule 34 (EXP)


State 49

   32 EXP: EXP . '+' EXP
   33    | EXP . '-' EXP
   34    | EXP . '*' EXP
   35    | EXP . '/' EXP
   35    | EXP '/' EXP .

    $default  reduce using rule 35 (EXP)


State 50

   43 FUNCTION_CALLED_ARG: VALUE_TOKEN .

    $default  reduce using rule 43 (FUNCTION_CALLED_ARG)


State 51

   40 FUNCTION_CALLED: ID_NAME $@5 '(' FUNCTION_CALLED_ARGS . ')'

    ')'  shift, and go to state 58


State 52

   41 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG . ',' FUNCTION_CALLED_ARGS
   42                     | FUNCTION_CALLED_ARG .

    ','  shift, and go to state 59

    $default  reduce using rule 42 (FUNCTION_CALLED_ARGS)


State 53

   27 VARDECLARATION: VAR ID_NAME '=' VALUE_TOKEN .

    $default  reduce using rule 27 (VARDECLARATION)


State 54

   26 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE .
   28               | VAR ID_NAME ':' VALUE_TYPE . '=' VALUE_TOKEN
   30               | VAR ID_NAME ':' VALUE_TYPE . '[' VALUE_TOKEN ']'

    '='  shift, and go to state 60
    '['  shift, and go to state 61

    $default  reduce using rule 26 (VARDECLARATION)


State 55

   25 VALDECLARATION: VAL ID_NAME '=' VALUE_TOKEN .

    $default  reduce using rule 25 (VALDECLARATION)


State 56

   24 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE . '=' VALUE_TOKEN

    '='  shift, and go to state 62


State 57

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 . FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

    '('  shift, and go to state 63

    FUNCTION_DEFINITION2  go to state 64


State 58

   40 FUNCTION_CALLED: ID_NAME $@5 '(' FUNCTION_CALLED_ARGS ')' .

    $default  reduce using rule 40 (FUNCTION_CALLED)


State 59

   41 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG ',' . FUNCTION_CALLED_ARGS

    VALUE_TOKEN  shift, and go to state 50

    FUNCTION_CALLED_ARGS  go to state 65
    FUNCTION_CALLED_ARG   go to state 52


State 60

   28 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 66


State 61

   30 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '[' . VALUE_TOKEN ']'

    VALUE_TOKEN  shift, and go to state 67


State 62

   24 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 68


State 63

   10 FUNCTION_DEFINITION2: '(' . FORMAL_ARGS ')' ':' VALUE_TYPE
   11                     | '(' . FORMAL_ARGS ')'

    ID_NAME  shift, and go to state 69

    FORMAL_ARGS  go to state 70
    ARG          go to state 71


State 64

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 . '{' $@4 STMTS '}'

    '{'  shift, and go to state 72


State 65

   41 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG ',' FUNCTION_CALLED_ARGS .

    $default  reduce using rule 41 (FUNCTION_CALLED_ARGS)


State 66

   28 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN .

    $default  reduce using rule 28 (VARDECLARATION)


State 67

   30 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN . ']'

    ']'  shift, and go to state 73


State 68

   24 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN .

    $default  reduce using rule 24 (VALDECLARATION)


State 69

   14 ARG: ID_NAME . ':' VALUE_TYPE

    ':'  shift, and go to state 74


State 70

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS . ')' ':' VALUE_TYPE
   11                     | '(' FORMAL_ARGS . ')'

    ')'  shift, and go to state 75


State 71

   12 FORMAL_ARGS: ARG . ',' FORMAL_ARGS
   13            | ARG .

    ','  shift, and go to state 76

    $default  reduce using rule 13 (FORMAL_ARGS)


State 72

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' . $@4 STMTS '}'

    $default  reduce using rule 8 ($@4)

    $@4  go to state 77


State 73

   30 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN ']' .

    $default  reduce using rule 30 (VARDECLARATION)


State 74

   14 ARG: ID_NAME ':' . VALUE_TYPE

    VALUE_TYPE  shift, and go to state 78


State 75

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' . ':' VALUE_TYPE
   11                     | '(' FORMAL_ARGS ')' .

    ':'  shift, and go to state 79

    $default  reduce using rule 11 (FUNCTION_DEFINITION2)


State 76

   12 FORMAL_ARGS: ARG ',' . FORMAL_ARGS

    ID_NAME  shift, and go to state 69

    FORMAL_ARGS  go to state 80
    ARG          go to state 71


State 77

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 . STMTS '}'

    ID_NAME      shift, and go to state 8
    VALUE_TOKEN  shift, and go to state 9
    VAR          shift, and go to state 10
    VAL          shift, and go to state 11
    RETURN       shift, and go to state 12
    '-'          shift, and go to state 13

    $default  reduce using rule 18 (STMTS)

    RETURN_STMT      go to state 15
    STMTS            go to state 81
    STMT             go to state 17
    VALDECLARATION   go to state 18
    VARDECLARATION   go to state 19
    EXP              go to state 20
    FUNCTION_CALLED  go to state 21


State 78

   14 ARG: ID_NAME ':' VALUE_TYPE .

    $default  reduce using rule 14 (ARG)


State 79

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' ':' . VALUE_TYPE

    VALUE_TYPE  shift, and go to state 82


State 80

   12 FORMAL_ARGS: ARG ',' FORMAL_ARGS .

    $default  reduce using rule 12 (FORMAL_ARGS)


State 81

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS . '}'

    '}'  shift, and go to state 83


State 82

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' ':' VALUE_TYPE .

    $default  reduce using rule 10 (FUNCTION_DEFINITION2)


State 83

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}' .

    $default  reduce using rule 9 (FUNCTION_DEFINITION)
