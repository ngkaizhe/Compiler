Terminals unused in grammar

    IF
    ELSE
    FOR
    TO
    WHILE
    AND
    NOT
    LT
    LE
    EQ
    NQ
    GE
    GT


State 14 conflicts: 3 shift/reduce
State 19 conflicts: 2 reduce/reduce
State 22 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 53 conflicts: 5 shift/reduce
State 54 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 $@1: %empty

    2 $@2: %empty

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 OBJCONTENT '}'

    4 OBJCONTENT: STMTS FUNCTION_DEFINITIONS

    5 FUNCTION_DEFINITIONS: FUNCTION_DEFINITION FUNCTION_DEFINITIONS
    6                     | FUNCTION_DEFINITION

    7 $@3: %empty

    8 $@4: %empty

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' ':' VALUE_TYPE
   11                     | '(' FORMAL_ARGS ')'

   12 FORMAL_ARGS: ARG ',' FORMAL_ARGS
   13            | ARG

   14 ARG: ID_NAME ':' VALUE_TYPE
   15    | %empty

   16 RETURN_STMT: RETURN EXP
   17            | RETURN

   18 STMTS: STMT
   19      | STMT STMTS
   20      | %empty

   21 STMT: ID_NAME '=' EXP
   22     | EXP
   23     | VALDECLARATION
   24     | VARDECLARATION
   25     | RETURN_STMT
   26     | PRINT '(' EXP ')'
   27     | PRINTLN '(' EXP ')'

   28 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   29               | VAL ID_NAME '=' VALUE_TOKEN

   30 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE
   31               | VAR ID_NAME '=' VALUE_TOKEN
   32               | VAR ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   33               | VAR ID_NAME
   34               | VAR ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN ']'

   35 EXP: ID_NAME
   36    | EXP '+' EXP
   37    | EXP '-' EXP
   38    | EXP '*' EXP
   39    | EXP '/' EXP
   40    | '-' EXP
   41    | VALUE_TOKEN
   42    | FUNCTION_CALLED
   43    | EXP OR EXP

   44 $@5: %empty

   45 FUNCTION_CALLED: ID_NAME $@5 '(' FUNCTION_CALLED_ARGS ')'

   46 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG ',' FUNCTION_CALLED_ARGS
   47                     | FUNCTION_CALLED_ARG

   48 FUNCTION_CALLED_ARG: EXP
   49                    | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 11 26 27 45
    ')' (41) 10 11 26 27 45
    '*' (42) 38
    '+' (43) 36
    ',' (44) 12 46
    '-' (45) 37 40
    '/' (47) 39
    ':' (58) 10 14 28 30 32 34
    '=' (61) 21 28 29 31 32
    '[' (91) 34
    ']' (93) 34
    '{' (123) 3 9
    '}' (125) 3 9
    error (256)
    ID_NAME <idName> (258) 3 9 14 21 28 29 30 31 32 33 34 35 45
    VALUE_TOKEN <value> (259) 28 29 31 32 34 41
    VALUE_TYPE <valueType> (260) 10 14 28 30 32 34
    VAR (261) 30 31 32 33 34
    VAL (262) 28 29
    DEF (263) 9
    IF (264)
    ELSE (265)
    FOR (266)
    PRINT (267) 26
    PRINTLN (268) 27
    RETURN (269) 16 17
    TO (270)
    WHILE (271)
    OBJECT (272) 3
    AND (273)
    OR (274) 43
    NOT (275)
    LT (276)
    LE (277)
    EQ (278)
    NQ (279)
    GE (280)
    GT (281)
    UMINUS (282)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    PROGRAM (42)
        on left: 3
        on right: 0
    $@1 (43)
        on left: 1
        on right: 3
    $@2 (44)
        on left: 2
        on right: 3
    OBJCONTENT (45)
        on left: 4
        on right: 3
    FUNCTION_DEFINITIONS (46)
        on left: 5 6
        on right: 4 5
    FUNCTION_DEFINITION (47)
        on left: 9
        on right: 5 6
    $@3 (48)
        on left: 7
        on right: 9
    $@4 (49)
        on left: 8
        on right: 9
    FUNCTION_DEFINITION2 (50)
        on left: 10 11
        on right: 9
    FORMAL_ARGS (51)
        on left: 12 13
        on right: 10 11 12
    ARG (52)
        on left: 14 15
        on right: 12 13
    RETURN_STMT (53)
        on left: 16 17
        on right: 25
    STMTS (54)
        on left: 18 19 20
        on right: 4 9 19
    STMT (55)
        on left: 21 22 23 24 25 26 27
        on right: 18 19
    VALDECLARATION (56)
        on left: 28 29
        on right: 23
    VARDECLARATION (57)
        on left: 30 31 32 33 34
        on right: 24
    EXP <value> (58)
        on left: 35 36 37 38 39 40 41 42 43
        on right: 16 21 22 26 27 36 37 38 39 40 43 48
    FUNCTION_CALLED <value> (59)
        on left: 45
        on right: 42
    $@5 (60)
        on left: 44
        on right: 45
    FUNCTION_CALLED_ARGS (61)
        on left: 46 47
        on right: 45 46
    FUNCTION_CALLED_ARG (62)
        on left: 48 49
        on right: 46 47


State 0

    0 $accept: . PROGRAM $end

    OBJECT  shift, and go to state 1

    PROGRAM  go to state 2


State 1

    3 PROGRAM: OBJECT . ID_NAME $@1 '{' $@2 OBJCONTENT '}'

    ID_NAME  shift, and go to state 3


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 4


State 3

    3 PROGRAM: OBJECT ID_NAME . $@1 '{' $@2 OBJCONTENT '}'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: PROGRAM $end .

    $default  accept


State 5

    3 PROGRAM: OBJECT ID_NAME $@1 . '{' $@2 OBJCONTENT '}'

    '{'  shift, and go to state 6


State 6

    3 PROGRAM: OBJECT ID_NAME $@1 '{' . $@2 OBJCONTENT '}'

    $default  reduce using rule 2 ($@2)

    $@2  go to state 7


State 7

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 . OBJCONTENT '}'

    ID_NAME      shift, and go to state 8
    VALUE_TOKEN  shift, and go to state 9
    VAR          shift, and go to state 10
    VAL          shift, and go to state 11
    PRINT        shift, and go to state 12
    PRINTLN      shift, and go to state 13
    RETURN       shift, and go to state 14
    '-'          shift, and go to state 15

    $default  reduce using rule 20 (STMTS)

    OBJCONTENT       go to state 16
    RETURN_STMT      go to state 17
    STMTS            go to state 18
    STMT             go to state 19
    VALDECLARATION   go to state 20
    VARDECLARATION   go to state 21
    EXP              go to state 22
    FUNCTION_CALLED  go to state 23


State 8

   21 STMT: ID_NAME . '=' EXP
   35 EXP: ID_NAME .
   45 FUNCTION_CALLED: ID_NAME . $@5 '(' FUNCTION_CALLED_ARGS ')'

    '='  shift, and go to state 24

    '('       reduce using rule 44 ($@5)
    $default  reduce using rule 35 (EXP)

    $@5  go to state 25


State 9

   41 EXP: VALUE_TOKEN .

    $default  reduce using rule 41 (EXP)


State 10

   30 VARDECLARATION: VAR . ID_NAME ':' VALUE_TYPE
   31               | VAR . ID_NAME '=' VALUE_TOKEN
   32               | VAR . ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   33               | VAR . ID_NAME
   34               | VAR . ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN ']'

    ID_NAME  shift, and go to state 26


State 11

   28 VALDECLARATION: VAL . ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN
   29               | VAL . ID_NAME '=' VALUE_TOKEN

    ID_NAME  shift, and go to state 27


State 12

   26 STMT: PRINT . '(' EXP ')'

    '('  shift, and go to state 28


State 13

   27 STMT: PRINTLN . '(' EXP ')'

    '('  shift, and go to state 29


State 14

   16 RETURN_STMT: RETURN . EXP
   17            | RETURN .

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    ID_NAME      [reduce using rule 17 (RETURN_STMT)]
    VALUE_TOKEN  [reduce using rule 17 (RETURN_STMT)]
    '-'          [reduce using rule 17 (RETURN_STMT)]
    $default     reduce using rule 17 (RETURN_STMT)

    EXP              go to state 31
    FUNCTION_CALLED  go to state 23


State 15

   40 EXP: '-' . EXP

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 32
    FUNCTION_CALLED  go to state 23


State 16

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 OBJCONTENT . '}'

    '}'  shift, and go to state 33


State 17

   25 STMT: RETURN_STMT .

    $default  reduce using rule 25 (STMT)


State 18

    4 OBJCONTENT: STMTS . FUNCTION_DEFINITIONS

    DEF  shift, and go to state 34

    FUNCTION_DEFINITIONS  go to state 35
    FUNCTION_DEFINITION   go to state 36


State 19

   18 STMTS: STMT .
   19      | STMT . STMTS

    ID_NAME      shift, and go to state 8
    VALUE_TOKEN  shift, and go to state 9
    VAR          shift, and go to state 10
    VAL          shift, and go to state 11
    PRINT        shift, and go to state 12
    PRINTLN      shift, and go to state 13
    RETURN       shift, and go to state 14
    '-'          shift, and go to state 15

    DEF       reduce using rule 18 (STMTS)
    DEF       [reduce using rule 20 (STMTS)]
    '}'       reduce using rule 18 (STMTS)
    '}'       [reduce using rule 20 (STMTS)]
    $default  reduce using rule 18 (STMTS)

    RETURN_STMT      go to state 17
    STMTS            go to state 37
    STMT             go to state 19
    VALDECLARATION   go to state 20
    VARDECLARATION   go to state 21
    EXP              go to state 22
    FUNCTION_CALLED  go to state 23


State 20

   23 STMT: VALDECLARATION .

    $default  reduce using rule 23 (STMT)


State 21

   24 STMT: VARDECLARATION .

    $default  reduce using rule 24 (STMT)


State 22

   22 STMT: EXP .
   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR   shift, and go to state 38
    '-'  shift, and go to state 39
    '+'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    '-'       [reduce using rule 22 (STMT)]
    $default  reduce using rule 22 (STMT)


State 23

   42 EXP: FUNCTION_CALLED .

    $default  reduce using rule 42 (EXP)


State 24

   21 STMT: ID_NAME '=' . EXP

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 43
    FUNCTION_CALLED  go to state 23


State 25

   45 FUNCTION_CALLED: ID_NAME $@5 . '(' FUNCTION_CALLED_ARGS ')'

    '('  shift, and go to state 44


State 26

   30 VARDECLARATION: VAR ID_NAME . ':' VALUE_TYPE
   31               | VAR ID_NAME . '=' VALUE_TOKEN
   32               | VAR ID_NAME . ':' VALUE_TYPE '=' VALUE_TOKEN
   33               | VAR ID_NAME .
   34               | VAR ID_NAME . ':' VALUE_TYPE '[' VALUE_TOKEN ']'

    '='  shift, and go to state 45
    ':'  shift, and go to state 46

    $default  reduce using rule 33 (VARDECLARATION)


State 27

   28 VALDECLARATION: VAL ID_NAME . ':' VALUE_TYPE '=' VALUE_TOKEN
   29               | VAL ID_NAME . '=' VALUE_TOKEN

    '='  shift, and go to state 47
    ':'  shift, and go to state 48


State 28

   26 STMT: PRINT '(' . EXP ')'

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 49
    FUNCTION_CALLED  go to state 23


State 29

   27 STMT: PRINTLN '(' . EXP ')'

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 50
    FUNCTION_CALLED  go to state 23


State 30

   35 EXP: ID_NAME .
   45 FUNCTION_CALLED: ID_NAME . $@5 '(' FUNCTION_CALLED_ARGS ')'

    '('       reduce using rule 44 ($@5)
    $default  reduce using rule 35 (EXP)

    $@5  go to state 25


State 31

   16 RETURN_STMT: RETURN EXP .
   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR   shift, and go to state 38
    '-'  shift, and go to state 39
    '+'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    '-'       [reduce using rule 16 (RETURN_STMT)]
    $default  reduce using rule 16 (RETURN_STMT)


State 32

   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   40    | '-' EXP .
   43    | EXP . OR EXP

    OR  shift, and go to state 38

    OR        [reduce using rule 40 (EXP)]
    $default  reduce using rule 40 (EXP)


State 33

    3 PROGRAM: OBJECT ID_NAME $@1 '{' $@2 OBJCONTENT '}' .

    $default  reduce using rule 3 (PROGRAM)


State 34

    9 FUNCTION_DEFINITION: DEF . ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

    ID_NAME  shift, and go to state 51


State 35

    4 OBJCONTENT: STMTS FUNCTION_DEFINITIONS .

    $default  reduce using rule 4 (OBJCONTENT)


State 36

    5 FUNCTION_DEFINITIONS: FUNCTION_DEFINITION . FUNCTION_DEFINITIONS
    6                     | FUNCTION_DEFINITION .

    DEF  shift, and go to state 34

    $default  reduce using rule 6 (FUNCTION_DEFINITIONS)

    FUNCTION_DEFINITIONS  go to state 52
    FUNCTION_DEFINITION   go to state 36


State 37

   19 STMTS: STMT STMTS .

    $default  reduce using rule 19 (STMTS)


State 38

   43 EXP: EXP OR . EXP

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 53
    FUNCTION_CALLED  go to state 23


State 39

   37 EXP: EXP '-' . EXP

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 54
    FUNCTION_CALLED  go to state 23


State 40

   36 EXP: EXP '+' . EXP

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 55
    FUNCTION_CALLED  go to state 23


State 41

   38 EXP: EXP '*' . EXP

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 56
    FUNCTION_CALLED  go to state 23


State 42

   39 EXP: EXP '/' . EXP

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    EXP              go to state 57
    FUNCTION_CALLED  go to state 23


State 43

   21 STMT: ID_NAME '=' EXP .
   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR   shift, and go to state 38
    '-'  shift, and go to state 39
    '+'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 21 (STMT)


State 44

   45 FUNCTION_CALLED: ID_NAME $@5 '(' . FUNCTION_CALLED_ARGS ')'

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    $default  reduce using rule 49 (FUNCTION_CALLED_ARG)

    EXP                   go to state 58
    FUNCTION_CALLED       go to state 23
    FUNCTION_CALLED_ARGS  go to state 59
    FUNCTION_CALLED_ARG   go to state 60


State 45

   31 VARDECLARATION: VAR ID_NAME '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 61


State 46

   30 VARDECLARATION: VAR ID_NAME ':' . VALUE_TYPE
   32               | VAR ID_NAME ':' . VALUE_TYPE '=' VALUE_TOKEN
   34               | VAR ID_NAME ':' . VALUE_TYPE '[' VALUE_TOKEN ']'

    VALUE_TYPE  shift, and go to state 62


State 47

   29 VALDECLARATION: VAL ID_NAME '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 63


State 48

   28 VALDECLARATION: VAL ID_NAME ':' . VALUE_TYPE '=' VALUE_TOKEN

    VALUE_TYPE  shift, and go to state 64


State 49

   26 STMT: PRINT '(' EXP . ')'
   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR   shift, and go to state 38
    '-'  shift, and go to state 39
    '+'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 65


State 50

   27 STMT: PRINTLN '(' EXP . ')'
   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR   shift, and go to state 38
    '-'  shift, and go to state 39
    '+'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 66


State 51

    9 FUNCTION_DEFINITION: DEF ID_NAME . $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

    $default  reduce using rule 7 ($@3)

    $@3  go to state 67


State 52

    5 FUNCTION_DEFINITIONS: FUNCTION_DEFINITION FUNCTION_DEFINITIONS .

    $default  reduce using rule 5 (FUNCTION_DEFINITIONS)


State 53

   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP
   43    | EXP OR EXP .

    OR   shift, and go to state 38
    '-'  shift, and go to state 39
    '+'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    OR        [reduce using rule 43 (EXP)]
    '-'       [reduce using rule 43 (EXP)]
    '+'       [reduce using rule 43 (EXP)]
    '*'       [reduce using rule 43 (EXP)]
    '/'       [reduce using rule 43 (EXP)]
    $default  reduce using rule 43 (EXP)


State 54

   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   37    | EXP '-' EXP .
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR   shift, and go to state 38
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    OR        [reduce using rule 37 (EXP)]
    $default  reduce using rule 37 (EXP)


State 55

   36 EXP: EXP . '+' EXP
   36    | EXP '+' EXP .
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR   shift, and go to state 38
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    OR        [reduce using rule 36 (EXP)]
    $default  reduce using rule 36 (EXP)


State 56

   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   38    | EXP '*' EXP .
   39    | EXP . '/' EXP
   43    | EXP . OR EXP

    OR  shift, and go to state 38

    OR        [reduce using rule 38 (EXP)]
    $default  reduce using rule 38 (EXP)


State 57

   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   39    | EXP '/' EXP .
   43    | EXP . OR EXP

    OR  shift, and go to state 38

    OR        [reduce using rule 39 (EXP)]
    $default  reduce using rule 39 (EXP)


State 58

   36 EXP: EXP . '+' EXP
   37    | EXP . '-' EXP
   38    | EXP . '*' EXP
   39    | EXP . '/' EXP
   43    | EXP . OR EXP
   48 FUNCTION_CALLED_ARG: EXP .

    OR   shift, and go to state 38
    '-'  shift, and go to state 39
    '+'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 48 (FUNCTION_CALLED_ARG)


State 59

   45 FUNCTION_CALLED: ID_NAME $@5 '(' FUNCTION_CALLED_ARGS . ')'

    ')'  shift, and go to state 68


State 60

   46 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG . ',' FUNCTION_CALLED_ARGS
   47                     | FUNCTION_CALLED_ARG .

    ','  shift, and go to state 69

    $default  reduce using rule 47 (FUNCTION_CALLED_ARGS)


State 61

   31 VARDECLARATION: VAR ID_NAME '=' VALUE_TOKEN .

    $default  reduce using rule 31 (VARDECLARATION)


State 62

   30 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE .
   32               | VAR ID_NAME ':' VALUE_TYPE . '=' VALUE_TOKEN
   34               | VAR ID_NAME ':' VALUE_TYPE . '[' VALUE_TOKEN ']'

    '='  shift, and go to state 70
    '['  shift, and go to state 71

    $default  reduce using rule 30 (VARDECLARATION)


State 63

   29 VALDECLARATION: VAL ID_NAME '=' VALUE_TOKEN .

    $default  reduce using rule 29 (VALDECLARATION)


State 64

   28 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE . '=' VALUE_TOKEN

    '='  shift, and go to state 72


State 65

   26 STMT: PRINT '(' EXP ')' .

    $default  reduce using rule 26 (STMT)


State 66

   27 STMT: PRINTLN '(' EXP ')' .

    $default  reduce using rule 27 (STMT)


State 67

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 . FUNCTION_DEFINITION2 '{' $@4 STMTS '}'

    '('  shift, and go to state 73

    FUNCTION_DEFINITION2  go to state 74


State 68

   45 FUNCTION_CALLED: ID_NAME $@5 '(' FUNCTION_CALLED_ARGS ')' .

    $default  reduce using rule 45 (FUNCTION_CALLED)


State 69

   46 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG ',' . FUNCTION_CALLED_ARGS

    ID_NAME      shift, and go to state 30
    VALUE_TOKEN  shift, and go to state 9
    '-'          shift, and go to state 15

    $default  reduce using rule 49 (FUNCTION_CALLED_ARG)

    EXP                   go to state 58
    FUNCTION_CALLED       go to state 23
    FUNCTION_CALLED_ARGS  go to state 75
    FUNCTION_CALLED_ARG   go to state 60


State 70

   32 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 76


State 71

   34 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '[' . VALUE_TOKEN ']'

    VALUE_TOKEN  shift, and go to state 77


State 72

   28 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE '=' . VALUE_TOKEN

    VALUE_TOKEN  shift, and go to state 78


State 73

   10 FUNCTION_DEFINITION2: '(' . FORMAL_ARGS ')' ':' VALUE_TYPE
   11                     | '(' . FORMAL_ARGS ')'

    ID_NAME  shift, and go to state 79

    $default  reduce using rule 15 (ARG)

    FORMAL_ARGS  go to state 80
    ARG          go to state 81


State 74

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 . '{' $@4 STMTS '}'

    '{'  shift, and go to state 82


State 75

   46 FUNCTION_CALLED_ARGS: FUNCTION_CALLED_ARG ',' FUNCTION_CALLED_ARGS .

    $default  reduce using rule 46 (FUNCTION_CALLED_ARGS)


State 76

   32 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN .

    $default  reduce using rule 32 (VARDECLARATION)


State 77

   34 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN . ']'

    ']'  shift, and go to state 83


State 78

   28 VALDECLARATION: VAL ID_NAME ':' VALUE_TYPE '=' VALUE_TOKEN .

    $default  reduce using rule 28 (VALDECLARATION)


State 79

   14 ARG: ID_NAME . ':' VALUE_TYPE

    ':'  shift, and go to state 84


State 80

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS . ')' ':' VALUE_TYPE
   11                     | '(' FORMAL_ARGS . ')'

    ')'  shift, and go to state 85


State 81

   12 FORMAL_ARGS: ARG . ',' FORMAL_ARGS
   13            | ARG .

    ','  shift, and go to state 86

    $default  reduce using rule 13 (FORMAL_ARGS)


State 82

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' . $@4 STMTS '}'

    $default  reduce using rule 8 ($@4)

    $@4  go to state 87


State 83

   34 VARDECLARATION: VAR ID_NAME ':' VALUE_TYPE '[' VALUE_TOKEN ']' .

    $default  reduce using rule 34 (VARDECLARATION)


State 84

   14 ARG: ID_NAME ':' . VALUE_TYPE

    VALUE_TYPE  shift, and go to state 88


State 85

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' . ':' VALUE_TYPE
   11                     | '(' FORMAL_ARGS ')' .

    ':'  shift, and go to state 89

    $default  reduce using rule 11 (FUNCTION_DEFINITION2)


State 86

   12 FORMAL_ARGS: ARG ',' . FORMAL_ARGS

    ID_NAME  shift, and go to state 79

    $default  reduce using rule 15 (ARG)

    FORMAL_ARGS  go to state 90
    ARG          go to state 81


State 87

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 . STMTS '}'

    ID_NAME      shift, and go to state 8
    VALUE_TOKEN  shift, and go to state 9
    VAR          shift, and go to state 10
    VAL          shift, and go to state 11
    PRINT        shift, and go to state 12
    PRINTLN      shift, and go to state 13
    RETURN       shift, and go to state 14
    '-'          shift, and go to state 15

    $default  reduce using rule 20 (STMTS)

    RETURN_STMT      go to state 17
    STMTS            go to state 91
    STMT             go to state 19
    VALDECLARATION   go to state 20
    VARDECLARATION   go to state 21
    EXP              go to state 22
    FUNCTION_CALLED  go to state 23


State 88

   14 ARG: ID_NAME ':' VALUE_TYPE .

    $default  reduce using rule 14 (ARG)


State 89

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' ':' . VALUE_TYPE

    VALUE_TYPE  shift, and go to state 92


State 90

   12 FORMAL_ARGS: ARG ',' FORMAL_ARGS .

    $default  reduce using rule 12 (FORMAL_ARGS)


State 91

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS . '}'

    '}'  shift, and go to state 93


State 92

   10 FUNCTION_DEFINITION2: '(' FORMAL_ARGS ')' ':' VALUE_TYPE .

    $default  reduce using rule 10 (FUNCTION_DEFINITION2)


State 93

    9 FUNCTION_DEFINITION: DEF ID_NAME $@3 FUNCTION_DEFINITION2 '{' $@4 STMTS '}' .

    $default  reduce using rule 9 (FUNCTION_DEFINITION)
