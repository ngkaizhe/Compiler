1: /* Sigma.scala
2:  *
3:  * Compute sum = 1 + 2 + ... + n
4:  */
5: 
<OBJECT>
<id: Sigma>
6: object Sigma
<'{'>
7: {
8:   // constants and variables
<VAL>
<id: n>
<Assignment operator: =>
<integer: 10>
9:   val n = 10
<VAR>
<id: sum>
<':'>
<INT>
10:   var sum: int
<VAR>
<id: index>
<':'>
<INT>
11:   var index: int
12: 
<DEF>
<id: main>
<'('>
<')'>
<'{'>
13:   def main () {
<id: sum>
<Assignment operator: =>
<integer: 0>
14:     sum = 0
<id: index>
<Assignment operator: =>
<integer: 0>
15:     index = 0
16:     
<WHILE>
<'('>
<id: index>
<Relational operator: <=>
<id: n>
<')'>
<'{'>
17:     while (index <= n) {
<id: sum>
<Assignment operator: =>
<id: sum>
<Arithmetic operator: +>
<id: index>
18:       sum = sum + index
<id: index>
<Assignment operator: =>
<id: index>
<Arithmetic operator: +>
<integer: 1>
19:       index = index + 1
<'}'>
20:     }
<PRINT>
<'('>
<string: The sum is >
<')'>
21:     print ("The sum is ")
<PRINTLN>
<'('>
<id: sum>
<')'>
22:     println (sum)
<'}'>
23:   }
<'}'>
24: }

Symbol Table:
Sigma
n
sum
index
main
